#!/bin/sh

# DO NOT EDIT -- GENERATED FILE

# This script initializes an Amazon EC2 instance
# for use as a text extraction worker node.

# must.have.root! 
if test $(id -u) != 0 ; then
  exec sudo /bin/sh $0
fi


PACKAGES=$(tr '\n' ' ' <<EOS)
%PACKAGES%
EOS

apt-get -y update

apt-get -y upgrade

apt-get install -y $PACKAGES

# work around somebody's idea of a bad joke.
rm -f /etc/parallel/config

HOME=/home/ubuntu
USER=ubuntu

cd $HOME

git clone https://github.com/gyepisam/fcc-textify

#Worker key
install -D -m 0600 /dev/stdin fcc-textify/auth <<EOS
%AUTH%
EOS

mode=%MODE%
install -D -m 0600 /dev/stdin fcc-textify/config/${mode}.ini <<EOS
[default]
injector-queue = extraction-job-$mode
collector-queue = extraction-data-$mode
text-bucket = ppi-extraction-text-$mode
image-bucket = ppi-extraction-image-$mode

[aws]
region = us-east-1
EOS

cat > /etc/rsyslog.d/60-udp-logging.conf <<'EOS'
$ModLoad imudp
$UDPServerAddress 127.0.0.1
$UDPServerRun 514
EOS

reload rsyslog

# run two sets of processors
for j in 1 2 ; do
    runitdir=textify-${j}
    install -D -m 0755 /dev/stdin $runitdir/run <<EOS
#!/bin/sh

authfile=$HOME/fcc-textify/auth

exec 2>&1

exec chpst env \
  RAILS_ENV=production \
  SHELL=/bin/sh \
  HOME=$HOME \
  AWS_ACCESS_KEY_ID="\$(sed -n 1p \$authfile)" \
  AWS_SECRET_ACCESS_KEY="\$(sed -n 2p \$authfile)" \
  python $HOME/fcc-textify/task.py extract_batch
EOS

    #consolidate logs to syslog
    logdir=$HOME/logs-$j
    SPACE=' '
    install -D -m 0755 /dev/stdin $logdir/config <<EOS
ptextify-${j}:$SPACE
U127.0.0.1
EOS

    install -D -m 0755 /dev/stdin $runitdir/log/run <<EOS
#!/bin/sh
exec svlogd $logdir
EOS

    ln -s $PWD/$runitdir /etc/service/textify-$j
done
